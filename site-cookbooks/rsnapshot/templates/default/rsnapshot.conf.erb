#################################################
# rsnapshot.conf - rsnapshot configuration file #
#################################################
#                                               #
# PLEASE BE AWARE OF THE FOLLOWING RULES:       #
#                                               #
# This file requires tabs between elements      #
#                                               #
# Directories require a trailing slash:         #
#   right: /home/                               #
#   wrong: /home                                #
#                                               #
#################################################

#######################
# CONFIG FILE VERSION #
#######################

config_version	<%= @server.config_version %>

###########################
# SNAPSHOT ROOT DIRECTORY #
###########################

# All snapshots will be stored under this root directory.
#
snapshot_root	<%= @server.snapshot_root %>

# If no_create_root is enabled, rsnapshot will not automatically create the
# snapshot_root directory. This is particularly useful if you are backing
# up to removable media, such as a FireWire or USB drive.
#
no_create_root	<%= @server.no_create_root ? 1 : 0 %>

#################################
# EXTERNAL PROGRAM DEPENDENCIES #
#################################

# LINUX USERS:   Be sure to uncomment "cmd_cp". This gives you extra features.
# EVERYONE ELSE: Leave "cmd_cp" commented out for compatibility.
#
# See the README file or the man page for more details.
#
<% if @server.cmd_cp %>
cmd_cp	<%= @server.cmd_cp %>
<% else %>
#cmd_cp	/path
<% end %>

# uncomment this to use the rm program instead of the built-in perl routine.
#
<% if @server.cmd_rm %>
cmd_rm	<%= @server.cmd_rm %>
<% else %>
#cmd_rm	/path
<% end %>

# rsync must be enabled for anything to work. This is the only command that
# must be enabled.
#
<% if @server.cmd_rsync %>
cmd_rsync	<%= @server.cmd_rsync %>
<% else %>
#cmd_rsync	/path
<% end %>

# Uncomment this to enable remote ssh backups over rsync.
#
<% if @server.cmd_ssh %>
cmd_ssh	<%= @server.cmd_ssh %>
<% else %>
#cmd_ssh	/path
<% end %>


# Comment this out to disable syslog support.
#
<% if @server.cmd_logger %>
cmd_logger	<%= @server.cmd_logger %>
<% else %>
#cmd_logger	/path
<% end %>

# Uncomment this to specify the path to "du" for disk usage checks.
# If you have an older version of "du", you may also want to check the
# "du_args" parameter below.
#
<% if @server.cmd_du %>
cmd_du	<%= @server.cmd_du %>
<% else %>
#cmd_du	/path
<% end %>

# Uncomment this to specify the path to rsnapshot-diff.
#
<% if @server.cmd_rsnapshot_diff %>
cmd_rsnapshot_diff	<%= @server.cmd_rsnapshot_diff %>
<% else %>
#cmd_rsnapshot_diff	/path
<% end %>

# Specify the path to a script (and any optional arguments) to run right
# before rsnapshot syncs files
#
<% if @server.cmd_preexec %>
cmd_preexec	<%= @server.cmd_preexec %>
<% else %>
#cmd_preexec	/path
<% end %>

# Specify the path to a script (and any optional arguments) to run right
# after rsnapshot syncs files
#
<% if @server.cmd_postexec %>
cmd_postexec	<%= @server.cmd_postexec %>
<% else %>
#cmd_postexec	/path
<% end %>

# Paths to lvcreate, lvremove, mount and umount commands, for use with
# Linux LVMs.
#
<% if @server.linux_lvm_cmd_lvcreate %>
linux_lvm_cmd_lvcreate	<%= @server.linux_lvm_cmd_lvcreate %>
<% else %>
#linux_lvm_cmd_lvcreate	/sbin/lvcreate
<% end %>
<% if @server.linux_lvm_cmd_lvremove %>
linux_lvm_cmd_lvremove	<%= @server.linux_lvm_cmd_lvremove %>
<% else %>
#linux_lvm_cmd_lvremove	/sbin/lvremove
<% end %>
<% if @server.linux_lvm_cmd_mount %>
linux_lvm_cmd_mount	<%= @server.linux_lvm_cmd_mount %>
<% else %>
#linux_lvm_cmd_mount	/bin/mount
<% end %>
<% if @server.linux_lvm_cmd_umount %>
linux_lvm_cmd_umount	<%= @server.linux_lvm_cmd_umount %>
<% else %>
#linux_lvm_cmd_umount	/bin/umount
<% end %>


#########################################
#           BACKUP INTERVALS            #
# Must be unique and in ascending order #
# i.e. hourly, daily, weekly, etc.      #
#########################################

<%- @server.retain.each do |ret| -%>
retain	<%= ret.name %>	<%= ret.count %>
<%- end -%>

############################################
#              GLOBAL OPTIONS              #
# All are optional, with sensible defaults #
############################################

# Verbose level, 1 through 5.
# 1     Quiet           Print fatal errors only
# 2     Default         Print errors and warnings only
# 3     Verbose         Show equivalent shell commands being executed
# 4     Extra Verbose   Show extra verbose information
# 5     Debug mode      Everything
#
verbose	<%= @server.verbose %>

# Same as "verbose" above, but controls the amount of data sent to the
# logfile, if one is being used. The default is 3.
#
loglevel	<%= @server.loglevel %>

# If you enable this, data will be written to the file you specify. The
# amount of data written is controlled by the "loglevel" parameter.
#
<% if @server.logfile %>
logfile	<%= @server.logfile %>
<% else %>
#logfile	/var/log/rsnapshot.log
<% end %>

# If enabled, rsnapshot will write a lockfile to prevent two instances
# from running simultaneously (and messing up the snapshot_root).
# If you enable this, make sure the lockfile directory is not world
# writable. Otherwise anyone can prevent the program from running.
#
lockfile	<%= @server.lockfile %>

# By default, rsnapshot check lockfile, check if PID is running
# and if not, consider lockfile as stale, then start
# Enabling this stop rsnapshot if PID in lockfile is not running
#
stop_on_stale_lockfile	<%= @server.stop_on_stale_lockfile ? 1 : 0 %>

# Default rsync args. All rsync commands have at least these options set.
#
#rsync_short_args -a
#rsync_long_args  --delete --numeric-ids --relative --delete-excluded

# ssh has no args passed by default, but you can specify some here.
#
#ssh_args -p 22

# Default arguments for the "du" program (for disk space reporting).
# The GNU version of "du" is preferred. See the man page for more details.
# If your version of "du" doesn't support the -h flag, try -k flag instead.
#
#du_args  -csh

# If this is enabled, rsync won't span filesystem partitions within a
# backup point. This essentially passes the -x option to rsync.
# The default is 0 (off).
#
one_fs	<%= @server.one_fs ? 1 : 0 %>

# The include and exclude parameters, if enabled, simply get passed directly
# to rsync. If you have multiple include/exclude patterns, put each one on a
# separate line. Please look up the --include and --exclude options in the
# rsync man page for more details on how to specify file name patterns. 
# 
#include  ???
#include  ???
#exclude  ???
#exclude  ???

# The include_file and exclude_file parameters, if enabled, simply get
# passed directly to rsync. Please look up the --include-from and
# --exclude-from options in the rsync man page for more details.
#
#include_file /path/to/include/file
#exclude_file /path/to/exclude/file

# If your version of rsync supports --link-dest, consider enable this.
# This is the best way to support special files (FIFOs, etc) cross-platform.
# The default is 0 (off).
#
link_dest	<%= @server.link_dest ? 1 : 0 %>

# When sync_first is enabled, it changes the default behaviour of rsnapshot.
# Normally, when rsnapshot is called with its lowest interval
# (i.e.: "rsnapshot hourly"), it will sync files AND rotate the lowest
# intervals. With sync_first enabled, "rsnapshot sync" handles the file sync,
# and all interval calls simply rotate files. See the man page for more
# details. The default is 0 (off).
#
sync_first	<%= @server.sync_first ? 1 : 0 %>

# If enabled, rsnapshot will move the oldest directory for each interval
# to [interval_name].delete, then it will remove the lockfile and delete
# that directory just before it exits. The default is 0 (off).
#
use_lazy_deletes	<%= @server.use_lazy_deletes ? 1 : 0 %>

# Number of rsync re-tries. If you experience any network problems or
# network card issues that tend to cause ssh to crap-out with
# "Corrupted MAC on input" errors, for example, set this to a non-zero
# value to have the rsync operation re-tried
#
<% if @server.rsync_numtries %>
rsync_numtries	<%= @server.rsync_numtries %>
<% else %>
#rsync_numtries	0
<% end %>

# LVM parameters. Used to backup with creating lvm snapshot before backup
# and removing it after. This should ensure consistency of data in some special
# cases
#
# LVM snapshot(s) size (lvcreate --size option).
#
<% if @server.linux_lvm_snapshotsize %>
linux_lvm_snapshotsize	<%= @server.linux_lvm_snapshotsize %>
<% else %>
#linux_lvm_snapshotsize	100M
<% end %>

# Name to be used when creating the LVM logical volume snapshot(s).
#
<% if @server.linux_lvm_snapshotname %>
linux_lvm_snapshotname	<%= @server.linux_lvm_snapshotname %>
<% else %>
#linux_lvm_snapshotname	rsnapshot
<% end %>

# Path to the LVM Volume Groups.
#
<% if @server.linux_lvm_vgpath %>
linux_lvm_vgpath	<%= @server.linux_lvm_vgpath %>
<% else %>
#linux_lvm_vgpath	/dev
<% end %>

# Mount point to use to temporarily mount the snapshot(s).
#
<% if @server.linux_lvm_mountpath %>
linux_lvm_mountpath	<%= @server.linux_lvm_mountpath %>
<% else %>
#linux_lvm_mountpath	/path/to/mount/lvm/snapshot/during/backup
<% end %>

###############################
### BACKUP POINTS / SCRIPTS ###
###############################

<%- @backups.each do |backup| -%>
backup	rsnapshot@<%= backup['host'] %><%= backup['directory'] %>	<%= backup['host'] %><% if backup['options'] && !backup['options'].empty? %>	<%= backup['options'] %><% end %>
<%- end -%>
